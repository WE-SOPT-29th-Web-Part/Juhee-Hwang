{"ast":null,"code":"var _jsxFileName = \"/Users/juliahwang/SOPT_29th/Juhee-Hwang/Week3/github-profile-finder/src/components/SearchBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = ({\n  setUserInfo\n}) => {\n  _s();\n\n  const [user, setUser] = useState(\"\");\n\n  const handleChange = e => {\n    setUser(e.target.value);\n  }; // 이 값을 submit했을 때 검색이 되도록,\n  // input 태그를 form 태그로 감싸고, onSubmit 이벤트를 사용하는 것\n\n\n  const handleSubmit = async e => {\n    // submit하면 기본적으로 새로고침이 됨. 이것을 방지하기 위해서! preventDefault사용!\n    e.preventDefault(); // user 값을 이용하여 정보를 받아오자!\n    // 서버에 있는 데이터를 받아오는 방법 -> 온라인에 올라와있는 데이터를 받아오자!\n    // 서버 통신이 필요하다 -> 서버 통신에는 받아오는데 시간이 걸린다 -> 비동기다\n    // 비동기 처리를 하기 위한 방법 -> async await\n    // azios는 서버통신을 도와주는 툴\n    // get은 받아온다는 의미이고, REST API의 한 종류이다.\n\n    const {\n      data\n    } = await axios.get(`https://api.github.com/users/${user}`); // 구조분해할당 (deconstructing)\n\n    setUserInfo(data);\n  };\n  /*\n      // 구조분해할당 설명\n      // 서버에서 받아온 데이터 중 data 프로퍼티를 data라는 이름으로 저장할게\n  \n      const abc = {\n          a: 3,\n          b: 5,\n          c: 7,\n      }\n      const a = abc.a;\n  \n      const { a } = abc\n      // abc 안에 있는 프로퍼티 a를 a라는 이름으로 설정할게\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Input, {\n      value: user,\n      onChange: handleChange,\n      type: \"text\",\n      placeholder: \"Github \\uD504\\uB85C\\uD544\\uC744 \\uAC80\\uC0C9\\uD574\\uBCF4\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchBar, \"wLKw5JMUGqTQc3Oo9kF3V4D/SOI=\");\n\n_c = SearchBar;\nexport default SearchBar;\nconst Input = styled.input`\n    width: 320px;\n    height: 57px;\n    padding: 16px;\n    color: rgb(229,230,231);\n    background-color: rgb(36,49,43);\n    outline: none;\n    border: 8px solid rgba(105,105,105,0.5);\n    border-radius: 20px;\n`;\n_c2 = Input;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchBar\");\n$RefreshReg$(_c2, \"Input\");","map":{"version":3,"sources":["/Users/juliahwang/SOPT_29th/Juhee-Hwang/Week3/github-profile-finder/src/components/SearchBar.jsx"],"names":["React","useState","styled","axios","SearchBar","setUserInfo","user","setUser","handleChange","e","target","value","handleSubmit","preventDefault","data","get","Input","input"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBN,QAAQ,CAAC,EAAD,CAA/B;;AACA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AACxBF,IAAAA,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,GAFD,CAF+B,CAK/B;AACA;;;AAEA,QAAMC,YAAY,GAAG,MAAOH,CAAP,IAAa;AAC9B;AACAA,IAAAA,CAAC,CAACI,cAAF,GAF8B,CAG9B;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMX,KAAK,CAACY,GAAN,CAAW,gCAA+BT,IAAK,EAA/C,CAAvB,CAV8B,CAW9B;;AACAD,IAAAA,WAAW,CAACS,IAAD,CAAX;AACH,GAbD;AAeR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEI,sBACI;AAAM,IAAA,QAAQ,EAAEF,YAAhB;AAAA,2BACI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEN,IAAd;AACA,MAAA,QAAQ,EAAEE,YADV;AAEA,MAAA,IAAI,EAAC,MAFL;AAEY,MAAA,WAAW,EAAC;AAFxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA7CD;;GAAMJ,S;;KAAAA,S;AA+CN,eAAeA,SAAf;AAEA,MAAMY,KAAK,GAAGd,MAAM,CAACe,KAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMD,K","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\n\nconst SearchBar = ({ setUserInfo }) => {\n        const [user,setUser] = useState(\"\");\n        const handleChange = (e) => {\n            setUser(e.target.value);\n        };\n        // 이 값을 submit했을 때 검색이 되도록,\n        // input 태그를 form 태그로 감싸고, onSubmit 이벤트를 사용하는 것\n\n        const handleSubmit = async (e) => {\n            // submit하면 기본적으로 새로고침이 됨. 이것을 방지하기 위해서! preventDefault사용!\n            e.preventDefault();\n            // user 값을 이용하여 정보를 받아오자!\n            // 서버에 있는 데이터를 받아오는 방법 -> 온라인에 올라와있는 데이터를 받아오자!\n            // 서버 통신이 필요하다 -> 서버 통신에는 받아오는데 시간이 걸린다 -> 비동기다\n            // 비동기 처리를 하기 위한 방법 -> async await\n            // azios는 서버통신을 도와주는 툴\n            // get은 받아온다는 의미이고, REST API의 한 종류이다.\n\n            const { data } = await axios.get(`https://api.github.com/users/${user}`);\n            // 구조분해할당 (deconstructing)\n            setUserInfo(data);\n        };\n\n/*\n    // 구조분해할당 설명\n    // 서버에서 받아온 데이터 중 data 프로퍼티를 data라는 이름으로 저장할게\n\n    const abc = {\n        a: 3,\n        b: 5,\n        c: 7,\n    }\n    const a = abc.a;\n\n    const { a } = abc\n    // abc 안에 있는 프로퍼티 a를 a라는 이름으로 설정할게\n*/\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <Input value={user}\n            onChange={handleChange}\n            type=\"text\" placeholder=\"Github 프로필을 검색해보세요\" />\n        </form>\n    );\n};\n\nexport default SearchBar;\n\nconst Input = styled.input`\n    width: 320px;\n    height: 57px;\n    padding: 16px;\n    color: rgb(229,230,231);\n    background-color: rgb(36,49,43);\n    outline: none;\n    border: 8px solid rgba(105,105,105,0.5);\n    border-radius: 20px;\n`;"]},"metadata":{},"sourceType":"module"}