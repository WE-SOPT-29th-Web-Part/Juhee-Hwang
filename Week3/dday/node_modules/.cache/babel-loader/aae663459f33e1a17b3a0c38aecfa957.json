{"ast":null,"code":"var _jsxFileName = \"/Users/juliahwang/SOPT_29th/Juhee-Hwang/Week3/dday/src/components/Text1.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Text1 = ({\n  year,\n  month,\n  date\n}) => {\n  _s();\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const [resultDate, setResultDate] = useState(\"yyyy년 mm월 dd일\"); // 어떤 것을 상태로 두래? -> 변화하는 값 - inputValue, resultDate\n  // input 값과, year, month, date값을 연산하여 resultDate에 넣어준다.\n\n  const handleChange = e => {\n    setInputValue(e.target.value);\n    printDate(e.target.value);\n  }; // 연산 수행 영역\n\n\n  const printDate = value => {\n    const printDate = value => {\n      const tempDate = new Date();\n      tempDate.setFullYear(year); // year값을 받아와서 그것을 Date객체로 넣어줌\n\n      tempDate.setMonth(Number(month) - 1);\n      tempDate.setDate(Number(date) + Number(value) - 1); // 임시적인 날짜를 만들고, 그 날짜를 가공하여 resultDate에 넣어줄게\n\n      const result = `${tempDate.getFullYear()}년 ${tempDate.getMonth()}월 ${tempDate.getDate()}일`;\n      setResultDate(result);\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), \"\\uC77C\\uC9F8 \\uB418\\uB294 \\uB0A0\\uC740?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: resultDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Text1, \"OCYa4ZvPJYxNf5+6sEupcHRk1/M=\");\n\n_c = Text1;\nexport default Text1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Text1\");","map":{"version":3,"sources":["/Users/juliahwang/SOPT_29th/Juhee-Hwang/Week3/dday/src/components/Text1.jsx"],"names":["React","useState","Text1","year","month","date","inputValue","setInputValue","resultDate","setResultDate","handleChange","e","target","value","printDate","tempDate","Date","setFullYear","setMonth","Number","setDate","result","getFullYear","getMonth","getDate"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA;AAAd,CAAD,KAAyB;AAAA;;AACnC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,eAAD,CAA5C,CAFmC,CAGnC;AACA;;AAEA,QAAMS,YAAY,GAAIC,CAAD,IAAO;AACxBJ,IAAAA,aAAa,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACAC,IAAAA,SAAS,CAACH,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACH,GAHD,CANmC,CAWnC;;;AACA,QAAMC,SAAS,GAAID,KAAD,IAAW;AACzB,UAAMC,SAAS,GAAID,KAAD,IAAW;AACzB,YAAME,QAAQ,GAAG,IAAIC,IAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,WAAT,CAAqBd,IAArB,EAFyB,CAGzB;;AACAY,MAAAA,QAAQ,CAACG,QAAT,CAAkBC,MAAM,CAACf,KAAD,CAAN,GAAe,CAAjC;AACAW,MAAAA,QAAQ,CAACK,OAAT,CAAiBD,MAAM,CAACd,IAAD,CAAN,GAAec,MAAM,CAACN,KAAD,CAArB,GAA8B,CAA/C,EALyB,CAMzB;;AACA,YAAMQ,MAAM,GAAI,GAAEN,QAAQ,CAACO,WAAT,EAAuB,KAAIP,QAAQ,CAACQ,QAAT,EAAoB,KAAIR,QAAQ,CAACS,OAAT,EAAmB,GAAxF;AACAf,MAAAA,aAAa,CAACY,MAAD,CAAb;AACH,KATD;AAUH,GAXD;;AAaA,sBACA;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEf,UAA1B;AAAsC,QAAA,QAAQ,EAAEI;AAAhD;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAA,gBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AASH,CAlCD;;GAAMN,K;;KAAAA,K;AAoCN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\n\n\nconst Text1 = ({year, month, date}) => {\n    const [inputValue, setInputValue] = useState(\"\");\n    const [resultDate, setResultDate] = useState(\"yyyy년 mm월 dd일\");\n    // 어떤 것을 상태로 두래? -> 변화하는 값 - inputValue, resultDate\n    // input 값과, year, month, date값을 연산하여 resultDate에 넣어준다.\n\n    const handleChange = (e) => {\n        setInputValue(e.target.value);\n        printDate(e.target.value);\n    };\n\n    // 연산 수행 영역\n    const printDate = (value) => {\n        const printDate = (value) => {\n            const tempDate = new Date();\n            tempDate.setFullYear(year);\n            // year값을 받아와서 그것을 Date객체로 넣어줌\n            tempDate.setMonth(Number(month) -1);\n            tempDate.setDate(Number(date) + Number(value) -1);\n            // 임시적인 날짜를 만들고, 그 날짜를 가공하여 resultDate에 넣어줄게\n            const result = `${tempDate.getFullYear()}년 ${tempDate.getMonth()}월 ${tempDate.getDate()}일`\n            setResultDate(result);\n        }\n    };\n\n    return (\n    <div className=\"text\">\n        <div>\n            <input type=\"text\" value={inputValue} onChange={handleChange} />\n            일째 되는 날은?\n        </div>\n        <div>{resultDate}</div>\n    </div>\n    );\n};\n\nexport default Text1;"]},"metadata":{},"sourceType":"module"}